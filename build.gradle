plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

group = 'committee.nova.flotage'
version = minecraft_version + '-' + mod_version

java {
    archivesBaseName = 'Flotage'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}


minecraft {
    mappings channel: 'official', version: "${minecraft_version}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'flotage'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                flotage {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'flotage'

            mods {
                flotage {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'flotage'

            mods {
                flotage {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'flotage', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                flotage {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        //Location of the maven for Architectury API
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }

    maven {
        //Location of the maven for KubeJS and Rhino
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
    maven {
        //Location of the maven for JEI
        url = 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}")
    compileOnly fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}")

    compileOnly fg.deobf("curse.maven:crafttweaker-239197:4050366")
    implementation fg.deobf("curse.maven:jade-324717:4082408")

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
}


jar {
    manifest {
        attributes([
                "Specification-Title"     : "Flotage",
                "Specification-Vendor"    : "Chemiofitor",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Chemiofitor",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
